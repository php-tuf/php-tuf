name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist --optimize-autoloader"

jobs:
  fixtures:
    name: Generate test fixtures
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: cache-pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - id: cache-pipenv
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install pip/pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pipenv
    - name: Install dependencies via pipenv
      run: |
        if [ -f Pipfile.lock ]; then pipenv --three install; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Generate fixtures
      run: |
        pipenv run python generate_fixtures.py
    - name: Store fixtures as artifact
      uses: actions/upload-artifact@v2
      with:
        name: fixtures
        path: fixtures/
        retention-days: 5

  build:
    name: PHP ${{ matrix.php }} test on ${{ matrix.operating-system }}
    needs: fixtures
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
        php: ['7.4', '7.3', '7.2']
        experimental: [false]
        include:
          - operating-system: ubuntu-latest
            php: 8.0
            experimental: true
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: sodium, json
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        if: matrix.php != '8.0'
        run: 'composer install ${{ env.COMPOSER_FLAGS }}'

      - name: Install dependencies (ignore-platform-req)
        if: matrix.php == '8.0'
        run: 'composer install ${{ env.COMPOSER_FLAGS }} --ignore-platform-req=php'

      - name: PHP linting
        if: matrix.operating-system != 'windows-latest'
        run: composer lint

      - name: Run PHPCS
        run: composer phpcs-ci

      - name: Download fixtures
        uses: actions/download-artifact@v2
        with:
          name: fixtures
          path: fixtures

      - name: Run test suite
        run: composer test

  build-lowest-version:
    name: Build lowest version
    needs: fixtures
    runs-on: ubuntu-latest

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: 'composer update ${{ env.COMPOSER_FLAGS }} --prefer-lowest'

      - name: Download fixtures
        uses: actions/download-artifact@v2
        with:
          name: fixtures
          path: fixtures

      - name: Run test suite
        run: composer test
