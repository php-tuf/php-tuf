name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist --optimize-autoloader"

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
        php: ['7.4', '7.3', '7.2']
        experimental: [false]
        include:
          - operating-system: ubuntu-latest
            php: 8.0
            experimental: true
    name: PHP ${{ matrix.php }} test on ${{ matrix.operating-system }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: sodium, json
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        if: matrix.php != '8.0'
        run: 'composer install ${{ env.COMPOSER_FLAGS }}'

      - name: Install dependencies (ignore-platform-req)
        if: matrix.php == '8.0'
        run: 'composer install ${{ env.COMPOSER_FLAGS }} --ignore-platform-req=php'

      - name: PHP linting
        if: matrix.operating-system != 'windows-latest'
        run: composer lint

      - name: Run PHPCS
        run: composer phpcs

      - name: Run test suite
        run: composer test

  build-lowest-version:
    name: Build lowest version
    runs-on: ubuntu-latest

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: 'composer update ${{ env.COMPOSER_FLAGS }} --prefer-lowest'

      - name: Run test suite
        run: composer test
